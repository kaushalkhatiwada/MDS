db.Customers.insertMany([
  {
    "order_id": 1,
    "customer_name": "Ramesh Chaudhary",
    "items": [
      { "product": "Laptop", "quantity": 1, "price": 1200 },
      { "product": "Mouse", "quantity": 2, "price": 25 }
    ],
    "order_date": ISODate("2023-10-01"),
    "total_amount": 1250,
    "status": "completed"
  },
  {
    "order_id": 2,
    "customer_name": "Sahil Shah",
    "items": [
      { "product": "Keyboard", "quantity": 1, "price": 50 },
      { "product": "Monitor", "quantity": 1, "price": 300 }
    ],
    "order_date": ISODate("2023-10-02"),
    "total_amount": 350,
    "status": "pending"
  },
  {
    "order_id": 3,
    "customer_name": "Binita Mukarmi",
    "items": [
      { "product": "Printer", "quantity": 1, "price": 200 },
      { "product": "Paper", "quantity": 5, "price": 10 }
    ],
    "order_date": ISODate("2023-10-03"),
    "total_amount": 250,
    "status": "completed"
  },
  {
    "order_id": 4,
    "customer_name": "Dinesh Khatri",
    "items": [
      { "product": "Tablet", "quantity": 1, "price": 500 },
      { "product": "Case", "quantity": 1, "price": 20 }
    ],
    "order_date": ISODate("2023-10-04"),
    "total_amount": 520,
    "status": "cancelled"
  }
])

Apply aggregation pipeline to obtain following:
	
Calculate the total revenue generated from all completed orders.
		db.Customers.aggregate([
  			{ 
    				$match: { status: "completed" } 
  			},
  			{ 
    				$group: { 
      					_id: null, 
      					total_revenue: { $sum: "$total_amount" }
    				}
  			}
			])

Find the average order value for all completed orders.
		db.Customers.aggregate([
 			{ 
    				$match: { status: "completed" }
  			},
  			{ 
    				$group: { 
      					_id: null, 
      					avg_order: { $avg: "$total_amount" }    				
				}
  			}
			])
		

Identify the customer who has spent the most across all their orders.
		db.Customers.aggregate([
  			{
    				$group: {
      					_id: "$customer_name", 
      					total_spent: { $sum: "$total_amount" } 
    				}
  			},
  			{ 
    				$sort: { total_spent: -1 } 
  			},
  			{ 
    				$limit: 1 
  			}
			])


Determine the most popular product based on the total quantity sold.
		db.Customers.aggregate([
  			{ $unwind: "$items" },
  			{
    				$group: {
      					_id: "$items.product",
      					total_quantity_sold: { $sum: "$items.quantity" }
    				}
  			},
  			{ $sort: { total_quantity_sold: -1 } },
  			{ $limit: 1 }
			])


Count the number of orders in each status (e.g., "pending", "completed", "cancelled").
		db.Customers.aggregate([
  			{
    				$group: {
      					_id: "$status", 
      					order_count: { $sum: 1 } 
    				}
  			}
			])


Calculate the total revenue generated by each customer.
		db.Customers.aggregate([
  			{
    				$group: {
      					_id: "$customer_name", 
      					total_revenue: { $sum: "$total_amount" } 
    				}
  			}
			])

		

Find all orders placed between October 1, 2023, and October 3, 2023.
		db.Customers.aggregate([
  			{
    				$match: {
      					order_date: {
        					$gte: ISODate("2023-10-01T00:00:00Z"), 
        					$lte: ISODate("2023-10-03T23:59:59Z") 
      					}
    				}
  			}
			])


Calculate the total quantity sold for each product.
		db.Customers.aggregate([
  			{
    				$unwind: "$items"  
  			},
  			{
    				$group: {  
      					_id: "$items.product",  
      					total_quantity_sold: { $sum: "$items.quantity" }  
    				}
  			},
  			{
    				$sort: { total_quantity_sold: -1 }  
  			}
			])
