table(trees, nci.labs)
set.seed(13)
km <- kmeans(sd.data, center=3, nstart = 20)
km.clusters <- km$cluster
summary(km.clusters)
par(mfrow = c(1,1))
plot(nci.data,col=km.clusters)
par(mfrow = c(1,1))
plot(nci.data,col=km.clusters)
points(km$centers)
# a.
# Load “arules” and “arulesViz” libraries
library(arules)
library(arulesViz)
# b.
# Load “Groceries” data, check its structure and interpret it carefully
data(Groceries)
str(Groceries)
# c.
# Get Frequent Item frequencies using itemFrequencyPlot function and interpret it carefully
itemFrequencyPlot(Groceries, topN=20, type="absolute")
# c.
# Get Frequent Item frequencies using itemFrequencyPlot function and interpret it carefully
itemFrequencyPlot(Groceries, topN=20, type="absolute")
# e.
# Show the top five rules using inspect and round the results to two digits
inspect(apriori_rule)
# d.
# Set a priori rule with support = 0.001 and confidence = 0.8 and interpret the output carefully
apriori_rule <- apriori(Groceries,
parameter = list(supp = 0.001, conf = 0.8))
# e.
# Show the top five rules using inspect and round the results to two digits
inspect(apriori_rule)
itemFrequencyPlot(Groceries, topN=20, type="relative")
# e.
# Show the top five rules using inspect and round the results to two digits
inspect(apriori_rule[1:5])
# e.
# Show the top five rules using inspect and round the results to two digits
five_rules<- inspect(apriori_rule[1:5])
round(five_rules,2)
print(round(five_rules,2))
# e.
# Show the top five rules using inspect and round the results to two digits
five_rules<- inspect(apriori_rule[1:5])
round(five_rules,2)
# f.
# Sort the rule by confidence in decreasing order
sorted_rules <- sort(apriori_rules, by = "confidence", decreasing = TRUE)
inspect(sorted_rules[1:5])
# f.
# Sort the rule by confidence in decreasing order
sorted_rules <- sort(apriori_rule, by = "confidence", decreasing = TRUE)
inspect(sorted_rules[1:5])
# d.
# Set a priori rule with support = 0.001 and confidence = 0.8 and interpret the output carefully
apriori_rule <- apriori(Groceries,
parameter = list(supp = 0.001, conf = 0.8)
maxlen=10,
# d.
# Set a priori rule with support = 0.001 and confidence = 0.8 and interpret the output carefully
apriori_rule <- apriori(Groceries,
parameter = list(supp = 0.001, conf = 0.8),
maxlen=10,
target="rules")
# e.
# Show the top five rules using inspect and round the results to two digits
five_rules<- inspect(apriori_rule[1:5])
# f.
# Sort the rule by confidence in decreasing order
sorted_rules <- sort(apriori_rule, by = "confidence", decreasing = TRUE)
inspect(sorted_rules[1:5])
# d.
# Set a priori rule with support = 0.001 and confidence = 0.8 and interpret the output carefully
apriori_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8,
maxlen=10,
target="rules"))
# e.
# Show the top five rules using inspect and round the results to two digits
five_rules<- inspect(apriori_rule[1:5])
# f.
# Sort the rule by confidence in decreasing order
sorted_rules <- sort(apriori_rule, by = "confidence", decreasing = TRUE)
inspect(sorted_rules[1:5])
milk_rules<- apriori(trans,
parameter = list(supp=0.3,
conf=0.5,
maxlen=10,
minlen=2),
appearance = list(default="lhs",rhs="whole milk")
)
milk_rules<- apriori(Groceries,
parameter = list(supp=0.3,
conf=0.5,
maxlen=10,
minlen=2),
appearance = list(default="lhs",rhs="whole milk")
)
inspect(milk_rules)
inspect(milk_rules)
milk_rules<- apriori(Groceries,
parameter = list(supp=0.3,
conf=0.5,
maxlen=10,
minlen=2),
appearance = list(rhs="whole milk")
)
inspect(milk_rules)
milk_rules<- apriori(Groceries,
parameter = list(supp=0.3,
conf=0.5,
maxlen=10,
minlen=2),
appearance = list(rhs="whole milk"))
# d.
# Set a priori rule with support = 0.001 and confidence = 0.8 and interpret the output carefully
apriori_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8,
maxlen=10,
target="rules"))
# e.
# Show the top five rules using inspect and round the results to two digits
five_rules<- inspect(apriori_rule[1:5])
milk_rules<- apriori(Groceries,
parameter = list(supp=0.3,
conf=0.5,
maxlen=10,
minlen=2,
target="rules"),
appearance = list(rhs="whole milk"))
inspect(milk_rules)
inspect(milk_rules[1:5])
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8,
maxlen=10,
target="rules"),
appearance = list(rhs="whole milk"))
inspect(milk_rules[1:5])
# g.
# Use “whole milk” as target item and show the items in “lhs” with decreasing order of confidence and show the top five rules
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(rhs="whole milk"))
inspect(milk_rules[1:5])
# g.
# Use “whole milk” as target item and show the items in “lhs” with decreasing order of confidence and show the top five rules
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(rhs="whole milk"))
inspect(sorted_rules[1:5])
inspect(milk_rules[1:5])
inspect(milk_sorted_rules[1:5])
inspect(milk_rules[1:5])
# g.
# Use “whole milk” as target item and show the items in “lhs” with decreasing order of confidence and show the top five rules
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(rhs="whole milk"))
milk_sorted_rules <- sort(milk_rule, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules[1:5])
inspect(milk_rules[1:5])
# h.
# Use “whole milk” as target item and show the items in “rhs” with decreasing order of confidence and show the top five rules
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(lhs="whole milk"))
milk_sorted_rules1 <- sort(milk_rule, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules1[1:5])
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(arulesViz)
data(Groceries)
str(Groceries)
itemFrequencyPlot(Groceries, topN=20, type="absolute")
apriori_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8,
maxlen=10,
target="rules"))
five_rules<- inspect(apriori_rule[1:5])
sorted_rules <- sort(apriori_rule, by = "confidence", decreasing = TRUE)
inspect(sorted_rules[1:5])
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(rhs="whole milk"))
milk_sorted_rules <- sort(milk_rule, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules[1:5])
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(lhs="whole milk"))
milk_sorted_rules1 <- sort(milk_rule, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules1[1:5])
?Apriori
library(cluster)
clusplot(nci.data,
km.clusters,
shade = TRUE,
lines=0,
color=TRUE)
library(cluster)
clusplot(nci.data,
km.clusters)
clusplot(nci.data)
library(cluster)
clusplot(nci.data,col=km.clusters)
par(mfrow = c(1,1))
plot(nci.data,col=km.clusters)
points(km$centers)
library(cluster)
clusplot(nci.data,col=km.clusters)
sd.data <- scale(nci.data)
par(mfrow = c(1,3))
data.dist <- dist(sd.data)
plot(hclust(data.dist), xlab = "", sub = "", ylab = "",
labels = nci.labs, main = "Complete Linkage")
plot(hclust(data.dist, method = "average"), xlab = "", sub = "", ylab = "",
labels = nci.labs, main = "Average Linkage")
plot(hclust(data.dist,method = "single"), xlab = "", sub = "", ylab = "",
labels = nci.labs, main = "Single Linkage")
clusters <- hclust(dist(sd.data))
trees <- cutree(clusters, 3)
table(trees, nci.labs)
set.seed(13)
km <- kmeans(sd.data, center=3, nstart = 20)
km.clusters <- km$cluster
summary(km.clusters)
par(mfrow = c(1,1))
plot(nci.data,col=km.clusters)
points(km$centers)
library(cluster)
clusplot(nci.data,col=km.clusters)
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(default="lhs",rhs="whole milk"))
milk_sorted_rules <- sort(milk_rule, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules[1:5])
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(lhs="whole milk"))
milk_sorted_rules1 <- sort(milk_rule, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules1[1:5])
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(lhs="whole milk",default="rhs"))
milk_sorted_rules1 <- sort(milk_rule, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules1[1:5])
knitr::opts_chunk$set(echo = TRUE)
library(cluster)
clusplot(nci.data,km.clusters)
?clusplot
km.clusters
market_basket <- list(
c("bread","milk"),
c("bread","diapers","beer","Eggs"),
c("milk","diapers","beer","cola"),
c("bread","milk","diapers","beer"),
c("bread","milk","diapers","cola")
)
names(market_basket) <- paste("T",c(1:5), sep = "")
library(arules)
# Transformation
trans<- as(market_basket,"transactions")
#Dimensions
dim(trans)
#Item Labels
itemLabels(trans)
#Summary
summary(trans)
#Plot
image(trans)
#Inspect
inspect(trans)
rules<- apriori(
trans,
parameter = list(supp=0.3,
conf=0.5,
maxlen=10,
target="rules")
)
summary(rules)
inspect(rules)
rules<- apriori(
trans,
parameter = list(supp=0.3,
conf=0.5,
maxlen=10,
minlen=2,
target="rules")
)
inspect(rules)
beer_rules<- apriori(
trans,
parameter = list(supp=0.3,
conf=0.5,
maxlen=10,
minlen=2),
appearance = list(default="lhs",rhs="beer")
)
inspect(beer_rules)
# e.
# Show the top five rules using inspect and round the results to two digits
five_rules<- inspect(apriori_rule)
# e.
# Show the top five rules using inspect and round the results to two digits
five_rules<- inspect(apriori_rule[1:5])
# f.
# Sort the rule by confidence in decreasing order
sorted_rules <- sort(apriori_rule, by = "confidence", decreasing = TRUE)
inspect(sorted_rules[1:5])
# g.
# Use “whole milk” as target item and show the items in “lhs” with decreasing order of confidence and show the top five rules
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(rhs="whole milk"))
milk_sorted_rules <- sort(milk_rule, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules[1:5])
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(default="lhs", rhs="whole milk"))
milk_sorted_rules <- sort(milk_rule, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules[1:5])
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(lhs="whole milk"deafult="rhs"))
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(lhs="whole milk", deafult="rhs"))
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(lhs="whole milk", default="rhs"))
milk_sorted_rules1 <- sort(milk_rule, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules1[1:5])
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(lhs="whole milk",default="rhs"))
milk_sorted_rules1 <- sort(milk_rule1, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules1[1:5])
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(lhs="whole milk", default="rhs"))
milk_sorted_rules1 <- sort(milk_rule1, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules1[1:5])
milk_sorted_rules1
milk_rule1
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(lhs="whole milk", default="rhs"))
milk_sorted_rules1 <- sort(milk_rule1, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules1[1:5])
milk_sorted_rules1 <- sort(milk_rule1, by = "confidence", decreasing = TRUE)
milk_rule1
# Use “Groceries” data available in the “datasets” package to do as follows in R Studio to knit PDF output
head(Groceries)
# a.
# Load “arules” and “arulesViz” libraries
library(arules)
library(arulesViz)
# b.
# Load “Groceries” data, check its structure and interpret it carefully
data(Groceries)
str(Groceries)
# c.
# Get Frequent Item frequencies using itemFrequencyPlot function and interpret it carefully
itemFrequencyPlot(Groceries, topN=20, type="absolute")
# d.
# Set a priori rule with support = 0.001 and confidence = 0.8 and interpret the output carefully
apriori_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8,
maxlen=10,
target="rules"))
# e.
# Show the top five rules using inspect and round the results to two digits
five_rules<- inspect(apriori_rule[1:5])
# f.
# Sort the rule by confidence in decreasing order
sorted_rules <- sort(apriori_rule, by = "confidence", decreasing = TRUE)
inspect(sorted_rules[1:5])
knitr::opts_chunk$set(echo = TRUE)
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(default="lhs",rhs="whole milk"))
library(arules)
library(arulesViz)
library(arules)
library(arulesViz)
library(arules)
library(arulesViz)
data(Groceries)
str(Groceries)
itemFrequencyPlot(Groceries, topN=20, type="absolute")
apriori_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8,
maxlen=10,
target="rules"))
apriori_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8,
maxlen=10,
target="rules"))
five_rules<- inspect(apriori_rule[1:5])
five_rules<- inspect(apriori_rule[1:5])
sorted_rules <- sort(apriori_rule, by = "confidence", decreasing = TRUE)
inspect(sorted_rules[1:5])
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(default="lhs",rhs="whole milk"))
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(default="lhs",rhs="whole milk"))
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(default="lhs",rhs="whole milk"))
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(default="lhs",rhs="whole milk"))
sd.data <- scale(nci.data)
knitr::opts_chunk$set(echo = TRUE)
sd.data <- scale(nci.data)
library(ISLR2)
nci.data <- NCI60$data
sd.data <- scale(nci.data)
library(ISLR2)
nci.data <- NCI60$data
sd.data <- scale(nci.data)
par(mfrow = c(1,3))
data.dist <- dist(sd.data)
plot(hclust(data.dist), xlab = "", sub = "", ylab = "",
labels = nci.labs, main = "Complete Linkage")
library(ISLR2)
nci.data <- NCI60$data
nci.labs <- NCI60$labs
sd.data <- scale(nci.data)
par(mfrow = c(1,3))
data.dist <- dist(sd.data)
plot(hclust(data.dist), xlab = "", sub = "", ylab = "",
labels = nci.labs, main = "Complete Linkage")
plot(hclust(data.dist, method = "average"), xlab = "", sub = "", ylab = "",
labels = nci.labs, main = "Average Linkage")
plot(hclust(data.dist,method = "single"), xlab = "", sub = "", ylab = "",
labels = nci.labs, main = "Single Linkage")
clusters <- hclust(dist(sd.data))
trees <- cutree(clusters, 3)
table(trees, nci.labs)
set.seed(13)
km <- kmeans(sd.data, center=3, nstart = 20)
km.clusters <- km$cluster
summary(km.clusters)
par(mfrow = c(1,1))
plot(nci.data,col=km.clusters)
points(km$centers)
library(arules)
library(arulesViz)
data(Groceries)
str(Groceries)
itemFrequencyPlot(Groceries, topN=20, type="absolute")
apriori_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8,
maxlen=10,
target="rules"))
five_rules<- inspect(apriori_rule[1:5])
sorted_rules <- sort(apriori_rule, by = "confidence", decreasing = TRUE)
inspect(sorted_rules[1:5])
milk_rule <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(default="lhs",rhs="whole milk"))
milk_sorted_rules <- sort(milk_rule, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules[1:5])
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(lhs="whole milk",default="rhs"))
milk_sorted_rules1 <- sort(milk_rule1, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules1[1:5])
milk_rule1 <- apriori(Groceries,
parameter = list(supp = 0.001,
conf = 0.8),
appearance = list(default="rhs"))
milk_sorted_rules1 <- sort(milk_rule1, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules1[1:5])
milk_sorted_rules1 <- sort(milk_rule1, by = "confidence", decreasing = TRUE)
inspect(milk_sorted_rules1[1:5])
